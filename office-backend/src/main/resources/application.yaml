logging.level.org.springframework.integration: WARN
logging.level.org.eclipse.paho: WARN

spring.cloud.gcp.project-id: "flock-office-290609"

spring:
  rsocket:
    server:
      port: ${PORT:9000}
      mapping-path: /ws
      transport: websocket

server:
  port: 8000 # server is not really used (cause of rsocket server), but this prevent a probably clash during deployments

pubsub:
  subscription-name: projects/${spring.cloud.gcp.project-id}/subscriptions/office-backend

weather:
  open-weather-map:
    api-key: ${_OPEN_WEATER_MAP_API_KEY}
    latitude: 52.09266175027509
    longitude: 5.122345051397365



alerting:
  signal-alert-api:
    enabled: true
    host: ${_SIGNAL_ALERT_API_HOST}
    token: ${_SIGNAL_ALERT_API_TOKEN}
    phone-numbers: ${_SIGNAL_ALERT_API_PHONE_NUMBERS}
  rules:
    - id : "test"
      type : "RAIN_CHECK_CONTACT_SENSOR"
      name : "Alert when dakterras is open and rain is imminent"
      time-to-reset : 30m
      device-ids : "99f9fb1b-fe98-414c-8562-68156ed3cc12"
      alerts :
        every-contact-change:
          message: "ðŸ˜±ðŸš¨ Deze deuren staan nu open: {{openContactSensors}} (Gesloten: {{allContactSensors}})."
          channel: SIGNAL
        some-id:
          time-to-deadline : 60m
          message: "The dakterras is open, and it's gonna rain in less than an hour ({{time}}). Please close it."
          channel: SIGNAL
        some-other-id:
          time-to-deadline: 20m
          message: "ALARM The dakterras is open, and it's gonna rain in 30 min ({{time}}). You have to close it now."
          channel: "SIGNAL"
      meta-data :
        what-ever-i-put-here: "IsParsedInAMap"
